[user]
	name = Michael Sharman
	email = sharmo@gmail.com

[color]
	ui = auto

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[color]
	ui = true
	diff = auto
	status = auto
	branch = auto
	interactive = auto

[color "diff"]
	whitespace = red reverse

[core]
	whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
	editor = /usr/bin/vi -f 
	excludesfile = /Users/michaelsharman/.gitignore_global

[merge]
    keepBackup = false
    tool = custom
        
[mergetool "custom"]
    cmd = /Applications/p4merge.app/Contents/Resources/launchp4merge "$PWD/$BASE" "$PWD/$REMOTE" "$PWD/$LOCAL" "$PWD/$MERGED"
    keepTemporaries = false
    trustExitCode = false
    keepBackup = false

#[merge]
#	tool = opendiff
#	summary = true

[diff]
    submodule = log

[alias]
  co = checkout
  ci = commit
  di = diff
  st = status -s -b
  br = branch
  hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
  type = cat-file -t
  dump = cat-file -p
  ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
  ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
  le = log --oneline --decorate
  leg = log --oneline --decorate --graph
  # list all aliases in .gitconfig
  la = "!git config -l | grep alias | cut -c 7-"
  lg = "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset' --abbrev-commit"
  timeline = log --graph --branches --pretty=oneline --decorate
	lol = log --pretty=oneline --abbrev-commit --graph --decorate

  ; Show git branches by date - useful for showing active branches
  brd = "! f() { for k in $(git branch $@ | sed 's/^..//; s/ .*//'); do  echo "$(git log -1 --pretty='%Cgreen%ci %Cblue(%cr)%Creset ' $k) $k" ;  done | sort -r; }; f"

